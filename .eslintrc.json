{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "plugins": ["@typescript-eslint", "unused-imports"],
  "extends": [
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "next",
    "next/core-web-vitals",
    "prettier"
  ],
  "ignorePatterns": ["*.config.js"],
  "rules": {
    "@next/next/no-img-element": "off",
    "@next/next/no-html-link-for-pages": "off",
    "react-hooks/exhaustive-deps": "off",
    "unused-imports/no-unused-imports-ts": "warn",
    "@typescript-eslint/no-unsafe-call": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/restrict-template-expressions": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unsafe-return": "off",
    "no-restricted-imports": [
      "error",
      {
        "patterns": [
          {
            "group": ["./*", "!./*.scss"],
            "group": ["./*", "../*", "!./*.scss"],
            "message": "scssファイル以外の相対パスを使用したimportは禁止です！"
          }
        ]
      }
    ],
    // 変数宣言と return 周辺を改行必須に
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
      { "blankLine": "any", "prev": ["const", "let", "var"], "next": ["const", "let", "var"] },
      { "blankLine": "always", "prev": "*", "next": "return" }
    ],
    // コールバック関数は必ずarrow-functionにする
    "prefer-arrow-callback": "error",
    // functin宣言はエラー
    // "func-style": "error",//TODO あとで
    // prop types を使っていないので off
    "react/prop-types": "off",
    // 命名に関するルール
    "@typescript-eslint/naming-convention": [
      "error",
      { "selector": ["typeAlias", "typeParameter"], "format": ["PascalCase"] },
      // { "selector": ["property", "parameterProperty", "method"], "format": ["camelCase"] },
      {
        "selector": ["variable"],
        "types": ["boolean"],
        "format": ["PascalCase"],
        "prefix": ["is", "has", "should", "can"]
      },
      {
        "selector": ["variable"],
        "types": ["string", "number", "array"],
        "modifiers": ["const"],
        "format": ["camelCase", "UPPER_CASE"]
      },
      {
        "selector": ["typeProperty"],
        "types": ["boolean"],
        "format": ["PascalCase"],
        "prefix": ["is", "has", "should", "can"]
      }
    ],
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal", ["parent", "sibling"], "object", "type", "index"],
        "newlines-between": "always",
        "pathGroupsExcludedImportTypes": ["builtin"],
        "alphabetize": { "order": "asc", "caseInsensitive": true },
        "pathGroups": [
          { "pattern": "react", "group": "builtin", "position": "before" },
          { "pattern": "next/**", "group": "builtin", "position": "after" },
          { "pattern": "next", "group": "builtin", "position": "after" },
          { "pattern": "@mui/**", "group": "external", "position": "before" },
          { "pattern": "react-hook-form", "group": "external", "position": "before" },
          { "pattern": "@react-icons/**", "group": "external", "position": "before" },
          { "pattern": "@constants", "group": "internal", "position": "before" },
          { "pattern": "@type-def/**", "group": "internal", "position": "before" },
          { "pattern": "@styles/***", "group": "internal", "position": "after" },
          { "pattern": "**.scss", "group": "internal", "position": "after" }
        ]
      }
    ]
  }
}
