name: release note & slack

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  create-release-tag:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.event.pull_request.merged == true

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TZ: "Asia/Tokyo"

    strategy:
      matrix:
        node-version: [16]

    steps:
      - uses: actions/checkout@v3

      # 前回のりリースタグを取得する
      - name: Get previous tag
        id: pre_tag
        run: |
          echo "::set-output name=pre_tag::$(curl -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)"

      # タグを生成する 「{YYYY.MM.DD}-{当日リリース回数}」
      - name: Generate release tag
        id: release_tag
        run: |
          today=$(date +'%Y.%m.%d')
          pre_release_date=$(echo ${{ steps.pre_tag.outputs.pre_tag }} | awk -F'-' '{print $1}')
          pre_release_count=$(echo ${{ steps.pre_tag.outputs.pre_tag }} | awk -F'-' '{print $2}')
          if [[ ! $pre_release_date = $today ]]; then
            echo "init count"
            pre_release_count=0
          fi
          echo "::set-output name=release_tag::$today-$(($pre_release_count + 1))"

      # 環境変数に情報を保存
      - name: Register PR detail
        id: pr_detail
        # https://docs.github.com/ja/github-ae@latest/webhooks-and-events/webhooks/webhook-events-and-payloads#pull_request
        run: |
          echo "REPOSITORY_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV
          echo "ASSIGNEE=${{ github.event.pull_request.user.login }}" >> $GITHUB_ENV
          echo "PR_URL=${{ github.event.pull_request.html_url}}" >> $GITHUB_ENV

      # ブランチ名のprefixからラベル名を取得する
      - name: Get label name
        id: get_label_name
        run: |
          branch_type=$(echo ${{github.head_ref}} | cut -d "/" -f1)
          if [ $branch_type == 'feature' ]; then
            label_name=$(echo "enhancement")
          elif [ $branch_type == 'fix' ] || [ $branch_type == 'hotfix' ]; then
            label_name=$(echo "bug")
          else
            label_name=""
          fi
          echo "::set-output name=label_name::$label_name"
          echo "PREFIX_LABEL=$label_name" >> $GITHUB_ENV

      # PRにラベルを付与する
      # - name: Auto labeling
      #   if: ${{ steps.get_label_name.outputs.label_name }}
      #   run: |
      #     number=$(echo $GITHUB_REF | sed -e 's/[^0-9]//g')
      #     gh pr edit $number --add-label ${{ steps.get_label_name.outputs.label_name }}

      # リリースノート作成
      - name: Create release note
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_tag.outputs.release_tag }}
          release_name: ${{ github.event.pull_request.title }}
          body: ${{ github.event.pull_request.body }}
          draft: false
          prerelease: false

      # リリースノートの内容を格納
      - name: Dump release note
        id: release_note
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "RELEASE_NOTE<<$EOF" >> $GITHUB_ENV
          curl -X GET -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' -H 'X-GitHub-Api-Version: 2022-11-28' https://api.github.com/repos/${{ github.repository }}/releases/latest >> $GITHUB_ENV
          echo "$EOF" >> $GITHUB_ENV

      # インストール（cacheを使用）
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - name: yarn install
        shell: bash
        run: yarn install --frozen-lockfile

      # releaseNoteを実行
      - name: Generate release note
        run: yarn run release-note
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}

      # slack通知
      - name: Slack notification
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: ${{ secrets.RELEASE_SLACK_CHANNEL }} #チャンネルID
          payload: |
            {
              "text": "リリースしました🎉\n${{ github.event.repository.name }}",
              "attachments": [{
                "color": "#10AA39",
                "fields": [
                  {
                    "title": "${{ github.event.pull_request.title }}",
                    "value": "${{ github.event.pull_request.html_url }}"
                  },
                  {
                    "title": "${{ steps.release_tag.outputs.release_tag }}",
                    "value": "${{ secrets.NOTION_DB_PAGE_URL }}"
                  }
                ]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_FOR_RELEASE_NOTE }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
